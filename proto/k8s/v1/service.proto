syntax = "proto3";

package k8s.v1;

import "k8s/v1/base.proto";
import "k8s/v1/deployment.proto";
import "k8s/v1/pod.proto";

service Service {
  rpc ListContexts(ListContextsRequest) returns (ListContextsResponse) {}
  rpc SetContext(SetContextRequest) returns (SetContextResponse) {}
  rpc ListNamespaces(ListNamespacesRequest) returns (ListNamespacesResponse) {}
  rpc ListDeployments(ListDeploymentsRequest) returns (ListDeploymentsResponse) {}
  rpc GetDeployment(GetDeploymentRequest) returns (GetDeploymentResponse) {}
  rpc ListPods(ListPodsRequest) returns (ListPodsResponse) {}
  rpc GetPod(GetPodRequest) returns (GetPodResponse) {}
  rpc PortForwardPod(PortForwardPodRequest) returns (PortForwardPodResponse) {}
  rpc StopPortForward(StopPortForwardRequest) returns (StopPortForwardResponse) {}
  rpc GetPortForwards(GetPortForwardsRequest) returns (GetPortForwardsResponse) {}
  rpc StreamLogs(StreamLogsRequest) returns (stream StreamLogsResponse) {}
}

message ListContextsRequest {}

message ListContextsResponse {
  repeated Context contexts = 1;
}

message SetContextRequest {
  string context = 1;
}

message SetContextResponse {}

message ListNamespacesRequest {}

message ListNamespacesResponse {
  repeated string namespaces = 1;
}

message ListDeploymentsRequest {
  repeated string namespaces = 1;
}

message ListDeploymentsResponse {
  repeated Deployment deployment = 1;
}

message GetDeploymentRequest {
  string namespace = 1;
  string deployment_name = 2;
}

message GetDeploymentResponse {
  Deployment deployment = 1;
}

message ListPodsRequest {
  repeated string namespaces = 1;
}

message ListPodsResponse {
  repeated Pod pods = 1;
}

message GetPodRequest {
  string namespace = 1;
  string pod_name = 2;
}

message GetPodResponse {
  Pod pod = 1;
}

message PortForwardPodRequest {
  string namespace = 1;
  string pod_name = 2;
  int32 local_port = 3;
  int32 remote_port = 4;
}

message PortForwardPodResponse {
  repeated PortForward port_forwards = 1;
}

message StopPortForwardRequest {
  string port_forward_id = 1;
}

message StopPortForwardResponse {
  repeated PortForward port_forwards = 1;
}

message GetPortForwardsRequest {}

message GetPortForwardsResponse {
  repeated PortForward port_forwards = 1;
}

message StreamLogsRequest {
  string namespace = 1;
  repeated string pods = 2;
  repeated string containers = 3;
  int64 since_seconds = 4;
}

message StreamLogsResponse {
  repeated ContainerLog log_batch = 1;
}
